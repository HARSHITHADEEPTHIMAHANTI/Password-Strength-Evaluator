import tkinter as tk
import re

def check_password_strength():
    password = entry.get()
    length_error = len(password) < 8
    digit_error = re.search(r"\d", password) is None
    uppercase_error = re.search(r"[A-Z]", password) is None
    lowercase_error = re.search(r"[a-z]", password) is None
    symbol_error = re.search(r"[!@#$%^&*(),.?\":{}|<>]", password) is None

    errors = [length_error, digit_error, uppercase_error, lowercase_error, symbol_error]

    if all(not e for e in errors):
        result.config(text="Strong Password ✅", fg="green")
        tips.config(text="Great job! Your password meets all requirements.", fg="green")
    elif sum(errors) <= 2:
        result.config(text="Moderate Password ⚠️", fg="orange")
        show_tips(length_error, digit_error, uppercase_error, lowercase_error, symbol_error)
    else:
        result.config(text="Weak Password ❌", fg="red")
        show_tips(length_error, digit_error, uppercase_error, lowercase_error, symbol_error)


def show_tips(length_error, digit_error, uppercase_error, lowercase_error, symbol_error):
    suggestions = []
    if length_error:
        suggestions.append("• Use at least 8 characters")
    if digit_error:
        suggestions.append("• Add at least one digit (0-9)")
    if uppercase_error:
        suggestions.append("• Add at least one uppercase letter (A-Z)")
    if lowercase_error:
        suggestions.append("• Add at least one lowercase letter (a-z)")
    if symbol_error:
        suggestions.append("• Add at least one special symbol (!@#$%^&* etc.)")

    tips.config(text="\n".join(suggestions), fg="blue")

# Tkinter UI
root = tk.Tk()
root.title("Password Strength Checker")
root.geometry("450x300")

label = tk.Label(root, text="Enter Password:", font=("Arial", 12))
label.pack(pady=10)

entry = tk.Entry(root, width=30, show="*")
entry.pack(pady=5)

btn = tk.Button(root, text="Check Strength", command=check_password_strength)
btn.pack(pady=10)

result = tk.Label(root, text="", font=("Arial", 12))
result.pack(pady=5)

tips = tk.Label(root, text="", font=("Arial", 10), justify="left")
tips.pack(pady=5)

root.mainloop()
